{"version":3,"sources":["webpack:///./src/components/Footer.js","webpack:///./src/templates/blog-index.js"],"names":["SFooter","styled","footer","_templateObject","Footer","render","react_default","a","createElement","href","target","rel","React","Component","Title","h3","blog_index_templateObject","Date","div","_templateObject2","MainText","_templateObject3","BlogIndexTemplate","nav","_templateObject4","siteTitle","get","this","langKey","props","pageContext","posts","Layout","location","title","SEO","Bio","map","_ref","node","fields","slug","key","gatsby_browser_entry","style","boxShadow","to","blog_index_Date","formatPostDate","frontmatter","date","dangerouslySetInnerHTML","__html","spoiler","components_Footer","pageQuery"],"mappings":"gXAMA,IAAMA,EAAUC,IAAOC,OAAVC,KA+BEC,4FAvBbC,OAAA,WACE,OACEC,EAAAC,EAAAC,cAACR,EAAD,KACEM,EAAAC,EAAAC,cAAA,KACEC,KAAK,iCACLC,OAAO,SACPC,IAAI,uBAHN,UAMK,IAPP,IAQS,IACPL,EAAAC,EAAAC,cAAA,KACEC,KAAK,0CACLC,OAAO,SACPC,IAAI,uBAHN,kBAZaC,IAAMC,isBCA3B,IAAMC,EAAQb,IAAOc,GAAVC,KAMLC,EAAOhB,IAAOiB,IAAVC,KAQJC,EAAWnB,IAAOiB,IAAVG,KAWRC,GALMrB,IAAOsB,IAAVC,+FAMPnB,OAAA,WACE,IAAMoB,EAAYC,IAAIC,KAAM,sCACtBC,EAAUD,KAAKE,MAAMC,YAAYF,QAEjCG,EAAQL,IAAIC,KAAM,sCAExB,OACErB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAQC,SAAUN,KAAKE,MAAMI,SAAUC,MAAOT,GAC5CnB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,MACA7B,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,OAEF9B,EAAAC,EAAAC,cAAA,YACGuB,GACCA,EAAMM,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACLL,EAAQR,IAAIa,EAAM,sBAAwBA,EAAKC,OAAOC,KAC5D,OACEnC,EAAAC,EAAAC,cAAA,WAASkC,IAAKH,EAAKC,OAAOC,MACxBnC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACM,EAAD,KACER,EAAAC,EAAAC,cAACmC,EAAA,KAAD,CACEC,MAAO,CACLC,UAAW,QAEbC,GAAIP,EAAKC,OAAOC,KAChB9B,IAAI,YAEHuB,IAGL5B,EAAAC,EAAAC,cAACuC,EAAD,KACGC,YAAeT,EAAKU,YAAYC,KAAMtB,KAG3CtB,EAAAC,EAAAC,cAACY,EAAD,CACE+B,wBAAyB,CACvBC,OAAQb,EAAKU,YAAYI,eAOvC/C,EAAAC,EAAAC,cAAC8C,EAAD,WA5CwB1C,IAAMC,YAoDzB0C,GAFEjC,YAEO","file":"component---src-templates-blog-index-js-033276c67ec56bd50f96.js","sourcesContent":["import React from 'react';\n\nimport { rhythm } from '../utils/typography';\n\nimport styled from 'styled-components';\n\nconst SFooter = styled.footer`\n  margin-top: 70px;\n  font-size: 8px;\n  text-decoration: none;\n  font-family: 'Noto Sans KR', sans-serif;\n`;\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <SFooter>\n        <a\n          href=\"https://github.com/hyunjaesung\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          github\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://hardworkingcoder.wordpress.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          wordpress\n        </a>\n      </SFooter>\n    );\n  }\n}\n\nexport default Footer;\n","import { Link, graphql } from 'gatsby';\nimport { formatPostDate } from '../utils/helpers';\n\nimport Bio from '../components/Bio';\nimport Footer from '../components/Footer';\nimport Layout from '../components/Layout';\nimport React from 'react';\nimport SEO from '../components/SEO';\nimport get from 'lodash/get';\nimport { rhythm } from '../utils/typography';\n\nimport styled from 'styled-components';\n\nconst Title = styled.h3`\n  font-size: rhythm(1);\n  font-family: 'Do Hyeon', sans-serif;\n  margin-bottom: 6px;\n`;\n\nconst Date = styled.div`\n  font-size: 10px;\n  font-family: 'Noto Sans KR', sans-serif;\n  opacity: 0.7;\n  font-weight: 200;\n  margin-bottom: 6px;\n`;\n\nconst MainText = styled.div`\n  font-size: 12px;\n  font-family: 'Noto Sans KR', sans-serif;\n  text-align: justify;\n`;\n\nconst Nav = styled.nav`\n  font-family: 'Noto Sans KR', sans-serif;\n  font-weight: 700;\n`;\n\nclass BlogIndexTemplate extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title');\n    const langKey = this.props.pageContext.langKey;\n\n    const posts = get(this, 'props.data.allMarkdownRemark.edges');\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO />\n        <aside>\n          <Bio />\n        </aside>\n        <main>\n          {posts &&\n            posts.map(({ node }) => {\n              const title = get(node, 'frontmatter.title') || node.fields.slug;\n              return (\n                <article key={node.fields.slug}>\n                  <header>\n                    <Title>\n                      <Link\n                        style={{\n                          boxShadow: 'none',\n                        }}\n                        to={node.fields.slug}\n                        rel=\"bookmark\"\n                      >\n                        {title}\n                      </Link>\n                    </Title>\n                    <Date>\n                      {formatPostDate(node.frontmatter.date, langKey)}\n                    </Date>\n                  </header>\n                  <MainText\n                    dangerouslySetInnerHTML={{\n                      __html: node.frontmatter.spoiler,\n                    }}\n                  />\n                </article>\n              );\n            })}\n        </main>\n        <Footer />\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndexTemplate;\n\nexport const pageQuery = graphql`\n  query($langKey: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { langKey: { eq: $langKey } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            langKey\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            spoiler\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}